{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"se",
				"seasonal_order"
			],
			[
				"history",
				"history_length"
			],
			[
				"mean_",
				"mean_val_loss_half"
			],
			[
				"trai",
				"train_loss"
			],
			[
				"train",
				"train_loss_history"
			],
			[
				"val",
				"val_loss_history"
			],
			[
				"reca",
				"recalculate_delta_train"
			],
			[
				"mini",
				"mini_forgiveness_mul"
			],
			[
				"FINAL",
				"FINAL_SEED_COLS"
			],
			[
				"nai",
				"limit_naive"
			],
			[
				"sum_val",
				"sum_val_loss_target_group"
			],
			[
				"sum_val_loss",
				"sum_val_loss_target_group"
			],
			[
				"hx_pr",
				"hx_private_1"
			],
			[
				"hx_shar",
				"hx_shared_1"
			],
			[
				"hx_p",
				"hx_private_1"
			],
			[
				"use_shared",
				"use_shared_representation"
			],
			[
				"use_represe",
				"use_representation_future"
			],
			[
				"DEFAU",
				"DEFAULT_FUTURE_EXO_COLS"
			],
			[
				"target",
				"target_weights"
			],
			[
				"corr_lag_best",
				"corr_lag_best_multi_kabko"
			],
			[
				"project",
				"project.sublime-workspace"
			],
			[
				"prepar",
				"__prepare_model"
			],
			[
				"combine_representation",
				"combine_representation_past_w0_mean"
			],
			[
				"share",
				"shared_representation"
			],
			[
				"repre",
				"representation_future_model"
			],
			[
				"represen",
				"representation_future_model"
			]
		]
	},
	"buffers":
	[
		{
			"file": "covid_forecasting_joint_learning/data/cols.py",
			"settings":
			{
				"buffer_size": 3859,
				"encoding": "UTF-8",
				"line_ending": "Windows"
			},
			"undo_stack":
			[
				[
					10,
					1,
					"insert",
					{
						"characters": "\n\nDATES"
					},
					"BwAAAP0KAAAAAAAA/goAAAAAAAAAAAAA/goAAAAAAAD/CgAAAAAAAAAAAAD/CgAAAAAAAAALAAAAAAAAAAAAAAALAAAAAAAAAQsAAAAAAAAAAAAAAQsAAAAAAAACCwAAAAAAAAAAAAACCwAAAAAAAAMLAAAAAAAAAAAAAAMLAAAAAAAABAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA/QoAAAAAAAD9CgAAAAAAAAAAAAAAAPC/"
				],
				[
					12,
					1,
					"insert",
					{
						"characters": "_BETA"
					},
					"BQAAAAQLAAAAAAAABQsAAAAAAAAAAAAABQsAAAAAAAAGCwAAAAAAAAAAAAAGCwAAAAAAAAcLAAAAAAAAAAAAAAcLAAAAAAAACAsAAAAAAAAAAAAACAsAAAAAAAAJCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAsAAAAAAAAECwAAAAAAAAAAAAAAAPC/"
				],
				[
					13,
					1,
					"insert",
					{
						"characters": " ="
					},
					"AgAAAAkLAAAAAAAACgsAAAAAAAAAAAAACgsAAAAAAAALCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQsAAAAAAAAJCwAAAAAAAAAAAAAAAPC/"
				],
				[
					14,
					1,
					"insert",
					{
						"characters": " D"
					},
					"AgAAAAsLAAAAAAAADAsAAAAAAAAAAAAADAsAAAAAAAANCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwsAAAAAAAALCwAAAAAAAAAAAAAAAPC/"
				],
				[
					15,
					1,
					"left_delete",
					null,
					"AQAAAAwLAAAAAAAADAsAAAAAAAABAAAARA",
					"AQAAAAAAAAABAAAADQsAAAAAAAANCwAAAAAAAAAAAAAAAPC/"
				],
				[
					16,
					1,
					"insert",
					{
						"characters": "[x"
					},
					"AgAAAAwLAAAAAAAADQsAAAAAAAAAAAAADQsAAAAAAAAOCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAsAAAAAAAAMCwAAAAAAAAAAAAAAAPC/"
				],
				[
					17,
					1,
					"insert",
					{
						"characters": " for"
					},
					"BAAAAA4LAAAAAAAADwsAAAAAAAAAAAAADwsAAAAAAAAQCwAAAAAAAAAAAAAQCwAAAAAAABELAAAAAAAAAAAAABELAAAAAAAAEgsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADgsAAAAAAAAOCwAAAAAAAAAAAAAAAPC/"
				],
				[
					18,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAABILAAAAAAAAEwsAAAAAAAAAAAAAEwsAAAAAAAAUCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgsAAAAAAAASCwAAAAAAAAAAAAAAAPC/"
				],
				[
					19,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAABQLAAAAAAAAFQsAAAAAAAAAAAAAFQsAAAAAAAAWCwAAAAAAAAAAAAAWCwAAAAAAABcLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAsAAAAAAAAUCwAAAAAAAAAAAAAAAPC/"
				],
				[
					20,
					1,
					"insert",
					{
						"characters": " DATES_BETA"
					},
					"CwAAABcLAAAAAAAAGAsAAAAAAAAAAAAAGAsAAAAAAAAZCwAAAAAAAAAAAAAZCwAAAAAAABoLAAAAAAAAAAAAABoLAAAAAAAAGwsAAAAAAAAAAAAAGwsAAAAAAAAcCwAAAAAAAAAAAAAcCwAAAAAAAB0LAAAAAAAAAAAAAB0LAAAAAAAAHgsAAAAAAAAAAAAAHgsAAAAAAAAfCwAAAAAAAAAAAAAfCwAAAAAAACALAAAAAAAAAAAAACALAAAAAAAAIQsAAAAAAAAAAAAAIQsAAAAAAAAiCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFwsAAAAAAAAXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					21,
					1,
					"insert",
					{
						"characters": " if"
					},
					"AwAAACILAAAAAAAAIwsAAAAAAAAAAAAAIwsAAAAAAAAkCwAAAAAAAAAAAAAkCwAAAAAAACULAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAIgsAAAAAAAAiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					22,
					1,
					"insert",
					{
						"characters": " x"
					},
					"AgAAACULAAAAAAAAJgsAAAAAAAAAAAAAJgsAAAAAAAAnCwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQsAAAAAAAAlCwAAAAAAAAAAAAAAAPC/"
				],
				[
					23,
					1,
					"insert",
					{
						"characters": " in"
					},
					"AwAAACcLAAAAAAAAKAsAAAAAAAAAAAAAKAsAAAAAAAApCwAAAAAAAAAAAAApCwAAAAAAACoLAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJwsAAAAAAAAnCwAAAAAAAAAAAAAAAPC/"
				],
				[
					24,
					1,
					"insert",
					{
						"characters": " DATES]"
					},
					"BwAAACoLAAAAAAAAKwsAAAAAAAAAAAAAKwsAAAAAAAAsCwAAAAAAAAAAAAAsCwAAAAAAAC0LAAAAAAAAAAAAAC0LAAAAAAAALgsAAAAAAAAAAAAALgsAAAAAAAAvCwAAAAAAAAAAAAAvCwAAAAAAADALAAAAAAAAAAAAADALAAAAAAAAMQsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKgsAAAAAAAAqCwAAAAAAAAAAAAAAAPC/"
				],
				[
					28,
					1,
					"paste",
					null,
					"AgAAAP4KAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAxCwAAAAAAADMAAAAKREFURVNfQkVUQSA9IFt4IGZvciB4IGluIERBVEVTX0JFVEEgaWYgeCBpbiBEQVRFU10",
					"AQAAAAAAAAABAAAAMQsAAAAAAAD+CgAAAAAAAAAAAAAAwINA"
				],
				[
					30,
					1,
					"paste",
					null,
					"AQAAADELAAAAAAAAZAsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMQsAAAAAAAAxCwAAAAAAAAAAAAAAAPC/"
				],
				[
					32,
					1,
					"paste",
					null,
					"AQAAAGQLAAAAAAAAlwsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAZAsAAAAAAABkCwAAAAAAAAAAAAAAAPC/"
				],
				[
					35,
					1,
					"paste",
					null,
					"AQAAAJcLAAAAAAAAygsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlwsAAAAAAACXCwAAAAAAAAAAAAAAAPC/"
				],
				[
					47,
					1,
					"paste",
					null,
					"AgAAADILAAAAAAAAPwsAAAAAAAAAAAAAPwsAAAAAAAA/CwAAAAAAAAoAAABEQVRFU19CRVRB",
					"AQAAAAAAAAABAAAAMgsAAAAAAAA8CwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"paste",
					null,
					"AgAAAE4LAAAAAAAAWwsAAAAAAAAAAAAAWwsAAAAAAABbCwAAAAAAAAoAAABEQVRFU19CRVRB",
					"AQAAAAAAAAABAAAATgsAAAAAAABYCwAAAAAAAAAAAAAAAPC/"
				],
				[
					65,
					1,
					"paste",
					null,
					"AgAAAGsLAAAAAAAAcgsAAAAAAAAAAAAAcgsAAAAAAAByCwAAAAAAAAoAAABEQVRFU19CRVRB",
					"AQAAAAAAAAABAAAAawsAAAAAAAB1CwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"paste",
					null,
					"AgAAAIELAAAAAAAAiAsAAAAAAAAAAAAAiAsAAAAAAACICwAAAAAAAAoAAABEQVRFU19CRVRB",
					"AQAAAAAAAAABAAAAgQsAAAAAAACLCwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"paste",
					null,
					"AgAAAJgLAAAAAAAAogsAAAAAAAAAAAAAogsAAAAAAACiCwAAAAAAAAoAAABEQVRFU19CRVRB",
					"AQAAAAAAAAABAAAAmAsAAAAAAACiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					90,
					1,
					"paste",
					null,
					"AgAAALELAAAAAAAAuwsAAAAAAAAAAAAAuwsAAAAAAAC7CwAAAAAAAAoAAABEQVRFU19CRVRB",
					"AQAAAAAAAAABAAAAsQsAAAAAAAC7CwAAAAAAAAAAAAAAAPC/"
				],
				[
					95,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAOILAAAAAAAA4wsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4gsAAAAAAADiCwAAAAAAAAAAAAAAAPC/"
				],
				[
					97,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAOMLAAAAAAAA5AsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA4wsAAAAAAADjCwAAAAAAAAAAAAAAAPC/"
				],
				[
					106,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAEQMAAAAAAAARQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARAwAAAAAAABEDAAAAAAAAAAAAAAAAPC/"
				],
				[
					108,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAEUMAAAAAAAARgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAARQwAAAAAAABFDAAAAAAAAAAAAAAAAPC/"
				],
				[
					124,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAPgLAAAAAAAA+QsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+AsAAAAAAAD4CwAAAAAAAAAAAAAAAPC/"
				],
				[
					126,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAPkLAAAAAAAA+gsAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAA+QsAAAAAAAD5CwAAAAAAAAAAAAAAAPC/"
				],
				[
					134,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAACQMAAAAAAAAJQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJAwAAAAAAAAkDAAAAAAAAAAAAAAAAPC/"
				],
				[
					136,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAACUMAAAAAAAAJgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAJQwAAAAAAAAlDAAAAAAAAAAAAAAAAPC/"
				],
				[
					144,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAKgMAAAAAAAAqQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqAwAAAAAAACoDAAAAAAAAAAAAAAAAPC/"
				],
				[
					146,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKkMAAAAAAAAqgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAqQwAAAAAAACpDAAAAAAAAAAAAAAAAPC/"
				],
				[
					158,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAJUEAAAAAAAAlgQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlQQAAAAAAACVBAAAAAAAAAAAAAAAAPC/"
				],
				[
					160,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAJYEAAAAAAAAlwQAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAlgQAAAAAAACWBAAAAAAAAAAAAAAAAPC/"
				],
				[
					168,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAQFAAAAAAAABQUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABAUAAAAAAAAEBQAAAAAAAAAAAAAAAPC/"
				],
				[
					170,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAUFAAAAAAAABgUAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABQUAAAAAAAAFBQAAAAAAAAAAAAAAAPC/"
				],
				[
					214,
					1,
					"insert",
					{
						"characters": "[]"
					},
					"AwAAAJAMAAAAAAAAkQwAAAAAAAAAAAAAkQwAAAAAAACRDAAAAAAAAAQAAABEQVlTkQwAAAAAAACSDAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAkAwAAAAAAACUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					236,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAABQMAAAAAAAAFQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFAwAAAAAAAAUDAAAAAAAAAAAAAAAAPC/"
				],
				[
					238,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAABUMAAAAAAAAFgwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQwAAAAAAAAVDAAAAAAAAAAAAAAAAPC/"
				],
				[
					258,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAIUKAAAAAAAAhgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhQoAAAAAAACFCgAAAAAAAAAAAAAAAPC/"
				],
				[
					260,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAIYKAAAAAAAAhwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAhgoAAAAAAACGCgAAAAAAAAAAAAAAAPC/"
				],
				[
					267,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAKQKAAAAAAAApQoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApAoAAAAAAACkCgAAAAAAAAAAAAAAAPC/"
				],
				[
					268,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAKUKAAAAAAAApgoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAApQoAAAAAAAClCgAAAAAAAAAAAAAAAPC/"
				],
				[
					275,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAMIKAAAAAAAAwwoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwgoAAAAAAADCCgAAAAAAAAAAAAAAAPC/"
				],
				[
					277,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAMMKAAAAAAAAxAoAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAwwoAAAAAAADDCgAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"file": "covid_forecasting_joint_learning/model/general.py",
			"settings":
			{
				"buffer_size": 44362,
				"line_ending": "Windows"
			},
			"undo_stack":
			[
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"ena",
				"Package Control: Enable Package"
			],
			[
				"disable",
				"Package Control: Disable Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"trailing",
				"Trim Trailing White Space"
			],
			[
				"enable",
				"Package Control: Enable Package"
			],
			[
				"enab",
				"Package Control: Enable Package"
			],
			[
				"instal",
				"Package Control: Install Package"
			],
			[
				"packagesync",
				"PackageSync: Backup/Restore - Restore Packages From Zip (Recommended)"
			],
			[
				"disab",
				"Package Control: Disable Package"
			],
			[
				"anaconda",
				"Anaconda: Set Python interpreter"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"disable ",
				"Package Control: Disable Package"
			],
			[
				"install pack",
				"Package Control: Install Package"
			],
			[
				"install pac",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/D/github/covid-forecasting-joint-learning",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/comparison",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline"
	],
	"file_history":
	[
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/preprocessing.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules/main.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/util.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/kabko.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/main.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/main.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/train.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/comparison/arima.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/comparison/sird.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/loss.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/loss_common.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules/residual.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules/combine.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules/head.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/general.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules/representation.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/center.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/cols.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/util.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/util.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/attr.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/early_stopping.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/eval.py",
		"/D/github/covid-forecasting-joint-learning/setup.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/sird.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/drive.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/scheduler.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline/lstm.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/postprocessing.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/exploration.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/__init__.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/modules/__init__.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/__init__.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/__init__.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/pipeline/clustering.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/const.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline/source_all.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline/fully_shared.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline/fully_private.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline/no_representation.py",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/baseline/source_closest.py",
		"/D/github/covid-forecasting-joint-learning/project.sublime-project",
		"/D/github/covid-forecasting-joint-learning/.gitignore",
		"/D/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/getter.py",
		"/D/github/covid-forecasting-joint-learning/LICENSE"
	],
	"find":
	{
		"height": 50.1492537313
	},
	"find_in_files":
	{
		"height": 140.417910448,
		"where_history":
		[
			"D:\\github\\covid-forecasting-joint-learning\\covid_forecasting_joint_learning"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"lrs",
			"DEFAULT_PAST_COLS",
			"DATES_I",
			"weight_decay",
			"delta_vac_full",
			"DAY",
			"aggregate",
			"pre_shared_representation",
			"aggregate",
			"clustering_1",
			"group",
			"msse",
			"tensor_count",
			"loss",
			"add_dates",
			"date",
			"padding",
			"batch_size",
			"batch_sizes",
			"w0_mean",
			"combine_representation_past_w0_mean",
			"mean",
			"DEFAULT",
			"reduce",
			"max",
			"from_iterables",
			"chain.",
			"chain",
			"from_iterable",
			"tensor_count",
			"tensor",
			"tensor_count",
			"layer",
			"wrap_reduce",
			"filter_batch",
			"wrap_reduce",
			"wrap_sum",
			"dim",
			"reduc",
			"DEFAULT",
			"index=",
			"set_index",
			"index",
			"DEFAULT_FUTURE",
			"DEFAULT_DATE",
			"suggest_categorical",
			"read_arima",
			"future_exo_cols",
			"DEFAULT_FUTURE",
			"trial",
			"limit",
			"eval_dataset",
			"self.model",
			"limit_loss",
			"limit",
			"optimizer_kwargs",
			"self.val_loss_history",
			"self.mid_val_loss",
			"def recalc",
			"def calc",
			"self.mean",
			"calculate_inter",
			"calculate",
			"val_loss_history",
			"optimizer_kwargs",
			"Optimizer(",
			"Optimizer",
			"Adam",
			"self.val_loss_history",
			"clip_grad",
			"clip",
			"dataloaders[0]",
			"preprocessing_6",
			"clip",
			"optimizer_kwargs",
			"scheduler",
			"round",
			"max(",
			"5",
			"max epoch",
			"due to",
			"clip",
			"learning_rate",
			"due to",
			"stopped due to",
			"stopped at",
			"stopped",
			"best_loss",
			"div_factor",
			"due to",
			"clip_grad",
			"get_last_lr",
			"get_lr",
			"clip_grad_norm",
			"max_grad_norm",
			"clip_grad",
			"end_lr",
			"objective",
			"reset_state",
			"find_lr",
			"div_factor",
			"lr_schedule",
			"objective(sc",
			"objective",
			"lr_find",
			"scheduler",
			"clear_hist",
			"_clear_history",
			"clear_history",
			"LRFinder",
			"model_kwargs",
			"1e-5",
			"25",
			"lr_test",
			"lrs",
			"calculate_interval_1",
			"calculate_interval_2",
			"st",
			"calculate_interval_1",
			"calculate_interval_2",
			"best_state",
			"train_fn",
			"non_blocking_transfer",
			"_set_learning_rate",
			"forgive_both",
			"both_counter -=",
			"both_patience",
			"forgive_both"
		],
		"highlight": false,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"from_iterable",
			"wrap_sum",
			"wrap_reduce",
			"self.fit_result",
			"objective",
			"min_low_mean",
			"small_forgiveness_mul",
			"NaNLoss",
			"update_best_val",
			"eps=ModelUtil.NAIVE_EPS",
			"eps=1e-3",
			"min_epoch",
			"raise Exception(\"NAN\")",
			"n",
			"",
			"seed_size",
			"KeyError, TypeError, AttributeError)",
			"use_representation_past",
			"use_representation_future",
			"model_dir",
			"self.model_dir",
			"Attribution.calc_layer_attr",
			"sample",
			"self",
			"layer_attr",
			"input_attr",
			"attr",
			"label",
			"use_seed",
			"use_exo",
			"teacher_forcing",
			"weight",
			"folder",
			"stopped",
			"train",
			"Interval",
			"interval"
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": "covid_forecasting_joint_learning/data/cols.py",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3859,
						"regions":
						{
						},
						"selection":
						[
							[
								2756,
								2756
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".(){}[],'\"=<>/\\+-|&*%=$#@! ",
									"selector": "source.python"
								},
								{
									"characters": ":.(){}[],'\"=<>/\\+-|&*%=$#@! ",
									"selector": "source & - source.python - constant.numeric"
								},
								{
									"characters": " qazwsxedcrfvtgbyhnujmikolpQAZWSXEDCRFVTGBYHNUJMIKOLP",
									"selector": "text"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										2822,
										2823
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/square_bracket.png",
										"region.bluish"
									]
								},
								"open":
								{
									"1":
									[
										2687,
										2688
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///D:/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/data/cols.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 2541.13432836,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "covid_forecasting_joint_learning/model/general.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 44362,
						"regions":
						{
						},
						"selection":
						[
							[
								32405,
								32408
							]
						],
						"settings":
						{
							"auto_complete_triggers":
							[
								{
									"characters": ".(){}[],'\"=<>/\\+-|&*%=$#@! ",
									"selector": "source.python"
								},
								{
									"characters": ":.(){}[],'\"=<>/\\+-|&*%=$#@! ",
									"selector": "source & - source.python - constant.numeric"
								},
								{
									"characters": " qazwsxedcrfvtgbyhnujmikolpQAZWSXEDCRFVTGBYHNUJMIKOLP",
									"selector": "text"
								}
							],
							"bracket_highlighter.busy": false,
							"bracket_highlighter.locations":
							{
								"close":
								{
									"1":
									[
										33046,
										33047
									]
								},
								"icon":
								{
									"1":
									[
										"Packages/BracketHighlighter/icons/round_bracket.png",
										"region.yellowish"
									]
								},
								"open":
								{
									"1":
									[
										31618,
										31619
									]
								},
								"unmatched":
								{
								}
							},
							"bracket_highlighter.regions":
							[
								"bh_regex",
								"bh_regex_center",
								"bh_regex_open",
								"bh_regex_close",
								"bh_regex_content",
								"bh_double_quote",
								"bh_double_quote_center",
								"bh_double_quote_open",
								"bh_double_quote_close",
								"bh_double_quote_content",
								"bh_unmatched",
								"bh_unmatched_center",
								"bh_unmatched_open",
								"bh_unmatched_close",
								"bh_unmatched_content",
								"bh_round",
								"bh_round_center",
								"bh_round_open",
								"bh_round_close",
								"bh_round_content",
								"bh_default",
								"bh_default_center",
								"bh_default_open",
								"bh_default_close",
								"bh_default_content",
								"bh_tag",
								"bh_tag_center",
								"bh_tag_open",
								"bh_tag_close",
								"bh_tag_content",
								"bh_angle",
								"bh_angle_center",
								"bh_angle_open",
								"bh_angle_close",
								"bh_angle_content",
								"bh_single_quote",
								"bh_single_quote_center",
								"bh_single_quote_open",
								"bh_single_quote_close",
								"bh_single_quote_content",
								"bh_square",
								"bh_square_center",
								"bh_square_open",
								"bh_square_close",
								"bh_square_content",
								"bh_c_define",
								"bh_c_define_center",
								"bh_c_define_open",
								"bh_c_define_close",
								"bh_c_define_content",
								"bh_curly",
								"bh_curly_center",
								"bh_curly_open",
								"bh_curly_close",
								"bh_curly_content"
							],
							"git_gutter_is_enabled": true,
							"lsp_uri": "file:///D:/github/covid-forecasting-joint-learning/covid_forecasting_joint_learning/model/general.py",
							"show_definitions": false,
							"syntax": "Packages/Python/Python.sublime-syntax",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 24843.2238806,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 37.2537313433
	},
	"input":
	{
		"height": 56.2985074627
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.diagnostics":
	{
		"height": 0.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "project.sublime-project",
	"replace":
	{
		"height": 70.2089552239
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 294.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
